// C√≥digo p5.js: Jogo de tabuleiro entre Agricultor e Empres√°rio

let posAgricultor = 0;
let posEmpresario = 0;
let currentPlayer = 1; // 1 = Empres√°rio, 2 = Agricultor
let gameState = 'jogando';
let timer;
let timeLimit = 35;

let feedbackMessage = ""; // Mensagem de feedback para o jogador
let feedbackTimeout;

// Perguntas espec√≠ficas para as casas
let perguntas = [
  {
    pergunta: "Qual √© o principal produto agr√≠cola do Brasil?",
    opcoes: ["Caf√©", "Soja", "Algod√£o"],
    resposta: 1
  },
  {
    pergunta: "Qual √© a sequ√™ncia correta de cultivo em uma rota√ß√£o?",
    opcoes: ["Milho, Trigo, Soja", "Soja, Milho, Algod√£o", "Trigo, Feij√£o, Milho"],
    resposta: 0
  },
  {
    pergunta: "O que caracteriza a agricultura familiar?",
    opcoes: ["Uso de tecnologia", "Produ√ß√£o para o mercado", "Produ√ß√£o para o consumo pr√≥prio"],
    resposta: 2
  },
  {
    pergunta: "Qual √© a fun√ß√£o principal das √°reas verdes nas cidades?",
    opcoes: ["Estacionamento", "Recrea√ß√£o", "Com√©rcio"],
    resposta: 1
  },
  {
    pergunta: "O que caracteriza um bairro residencial?",
    opcoes: ["Muitas lojas", "Casas e apartamentos", "Ind√∫strias"],
    resposta: 1
  },
  {
    pergunta: "O que s√£o transportes p√∫blicos?",
    opcoes: ["Carros particulares", "√înibus e trens", "Bicicletas"],
    resposta: 1
  },
  {
    pergunta: "Qual √© uma caracter√≠stica de uma cidade sustent√°vel?",
    opcoes: ["Polui√ß√£o alta", "Uso de energia renov√°vel", "Desmatamento"],
    resposta: 1
  },
  {
    pergunta: "O que √© um centro comercial?",
    opcoes: ["√Årea de lazer", "Conjunto de lojas", "Escola"],
    resposta: 1
  },
  {
    pergunta: "Qual √© a fun√ß√£o de uma pra√ßa na cidade?",
    opcoes: ["Aumentar o tr√°fego", "Espa√ßo de conviv√™ncia", "Armazenar lixo"],
    resposta: 1
  },
  {
    pergunta: "O que √© urbaniza√ß√£o?",
    opcoes: ["Aumento do espa√ßo rural", "Redu√ß√£o da popula√ß√£o", "Crescimento das cidades"],
    resposta: 2
  },
  {
    pergunta: "Um exemplo de polui√ß√£o urbana?",
    opcoes: ["Barulho", "Flores", "√Åguas limpas"],
    resposta: 0
  },
  {
    pergunta: "O que s√£o favelas?",
    opcoes: ["Comunidades carentes", "√Åreas de luxo", "Parques"],
    resposta: 0
  },
  {
    pergunta: "Qual a vantagem do transporte coletivo?",
    opcoes: ["Mais carros nas ruas", "Aumento da polui√ß√£o", "Redu√ß√£o de tr√°fego"],
    resposta: 2
  },
  // Perguntas sobre o espa√ßo rural
  {
    pergunta: "Qual √© a principal atividade econ√¥mica no espa√ßo rural?",
    opcoes: ["Agricultura", "Ind√∫stria", "Com√©rcio"],
    resposta: 0
  },
  {
    pergunta: "O que √© uma propriedade rural?",
    opcoes: ["Casa na cidade", "Loja", "Fazenda ou s√≠tio"],
    resposta: 2
  },
  {
    pergunta: "Qual produto √© um t√≠pico da pecu√°ria?",
    opcoes: ["Leite", "Frutas", "P√£o"],
    resposta: 1
  },
  {
    pergunta: "O que caracteriza uma agricultura familiar?",
    opcoes: ["Grandes planta√ß√µes", "Produ√ß√£o para consumo pr√≥prio", "Ind√∫stria pesada"],
    resposta: 1
  },
  {
    pergunta: "Qual √© uma t√©cnica comum de cultivo?",
    opcoes: ["Plantio direto", "Urbaniza√ß√£o", "Transporte coletivo"],
    resposta: 0
  },
  {
    pergunta: "Qual √© um benef√≠cio das roscas agr√≠colas?",
    opcoes: ["Reduzir a biodiversidade", "Aumentar a produ√ß√£o alimentar", "Poluir o solo"],
    resposta: 1
  },
  {
    pergunta: "O que √© agroecologia?",
    opcoes: ["Uso de agrot√≥xicos", "Pecu√°ria intensiva", "Agricultura sustent√°vel"],
    resposta: 2
  },
  {
    pergunta: "Qual √© uma atividade importante no espa√ßo rural?",
    opcoes: ["Silvicultura", "Com√©rcio varejista", "Constru√ß√£o civil"],
    resposta: 0
  },
  {
    pergunta: "O que s√£o culturas de subsist√™ncia?",
    opcoes: ["Culturas para exporta√ß√£o", "Culturas industriais", "Culturas para consumo da fam√≠lia"],
    resposta: 2
  },
  {
    pergunta: "Qual √© um exemplo de produto agr√≠cola?",
    opcoes: ["Arroz", "Carv√£o", "Pl√°stico"],
    resposta: 0
  }
];

let diceValue = 0;
let rollingDice = false;
let winner = null;

const totalCasas = 50;
const perguntasPosicoes = Array.from({ length: totalCasas }, (_, i) => (i + 1) % 5 === 0); // Casas com perguntas

function setup() {
  createCanvas(800, 600);
  textAlign(CENTER, CENTER);
  textSize(16);
}

function draw() {
  background(220);
  
  drawBoard();
  drawTimer();
  drawFeedback(); // Chama a fun√ß√£o para desenhar a mensagem de feedback

  if (winner !== null) {
    fill(0);
    textSize(24);
    text(`Parab√©ns! ${winner} ganhou um certificado de m√©rito e R$10.000!`, width / 2, height / 2);
    noLoop();
  }

  drawStatus();
}

function drawBoard() {
  for (let i = 0; i < totalCasas; i++) {
    let x = 50 + i * 15;
    fill(perguntasPosicoes[i] ? 'rgb(240,227,227)' : 'white');
    stroke(0);
    rect(x, height / 2 - 50, 15, 25);
    fill(0);
    text(i + 1, x + 7.5, height / 2 - 37.5);
  }

  let baseX = 50 + 7.5;

  // Agricultor
  let posAgriX = baseX + posAgricultor * 15;
  fill('green');
  rect(posAgriX - 5, height / 2 - 45, 10, 10);

  // Empres√°rio
  let posEmpX = baseX + posEmpresario * 15;
  fill('blue');
  rect(posEmpX + 5, height / 2 - 45, 10, 10);
}

function drawStatus() {
  fill(0);
  textSize(16);
  text(`Jogador ${currentPlayer} √© sua vez`, width / 2, 30);

  if (currentPlayer === 1) {
    text("Pressione 'E' para rolar o dado, Empres√°rio", width / 2, 60);
  } else {
    text("Pressione 'A' para rolar o dado, Agricultor", width / 2, 60);
  }

  if (diceValue > 0) {
    text(`Dado: ${diceValue}`, width / 2, 90);
  }
}

function drawTimer() {
  if (gameState === 'pergunta' && timer > 0) {
    fill(0);
    textSize(24);
    text(`Tempo: ${timer} s`, width / 2, height - 30);
  }
}

function drawFeedback() {
  if (feedbackMessage) {
    fill(0);
    textSize(24);
    text(feedbackMessage, width / 2, height / 2);
  }
}

function keyPressed() {
  if (gameState !== 'jogando') return;

  if ((key === 'a' || key === 'A') && currentPlayer === 2 && !rollingDice) {
    rollingDice = true;
    rollDice();
  }

  if ((key === 'e' || key === 'E') && currentPlayer === 1 && !rollingDice) {
    rollingDice = true;
    rollDice();
  }
}

function rollDice() {
  diceValue = floor(random(1, 7));
  setTimeout(() => {
    movePlayer();
    rollingDice = false;
  }, 500);
}

function movePlayer() {
  if (currentPlayer === 1) {
    posEmpresario += diceValue;
    if (posEmpresario >= totalCasas) {
      winner = 'Empres√°rio';
    } else {
      checkQuestion(posEmpresario);
    }
    currentPlayer = 2;
  } else {
    posAgricultor += diceValue;
    if (posAgricultor >= totalCasas) {
      winner = 'Agricultor';
    } else {
      checkQuestion(posAgricultor);
    }
    currentPlayer = 1;
  }
}

function checkQuestion(pos) {
  if (perguntas[pos]) {
    gameState = 'pergunta';
    askQuestion(pos);
  }
}

function askQuestion(pos) {
  let q = perguntas[pos]; // Pergunta espec√≠fica para a casa

  timer = timeLimit;
  let timeInterval = setInterval(() => {
    timer--;
    if (timer <= 0) {
      clearInterval(timeInterval);
      gameState = 'jogando'; // N√£o mudar a posi√ß√£o
    }
  }, 1000);

  let answer = prompt(
    `${q.pergunta}\nOp√ß√µes:\n0: ${q.opcoes[0]}\n1: ${q.opcoes[1]}\n2: ${q.opcoes[2]}`
  );
  answer = int(answer);

  clearInterval(timeInterval);

  if (answer === q.resposta) {
    // Mensagem de resposta correta
    feedbackMessage = "‚úÖParab√©ns, resposta correta!‚úÖüòé";
    setTimeout(() => {
      feedbackMessage = ""; // Limpa a mensagem ap√≥s 0,1 segundos
    }, 8000);
    // Avan√ßa apenas o n√∫mero do dado
    if (currentPlayer === 1) {
      posEmpresario += diceValue; 
    } else {
      posAgricultor += diceValue; 
    }
  } else {
    // Mensagem de resposta incorreta
    feedbackMessage = "‚ùåPergunta incorreta‚ùåüò¢";
    setTimeout(() => {
      feedbackMessage = ""; // Limpa a mensagem ap√≥s 0,1 segundos
    }, 8000);
    // Permanece na mesma casa
  }

  gameState = 'jogando';
}